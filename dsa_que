class Solution {
public:
    pair<int,int> cnt(unordered_map<char,int>&alph)
    {
        int a1=0;
        int a2=0;
        for(auto it:alph)
        {
            if(it.second>0)
            {
            a1++;
            a2+=it.second;
            }
        }
                
        return {a1,a2};
    }
    int lengthOfLongestSubstring(string s) {
        
        int i=0;
        int j=0;
        int maxi=0;
        unordered_map<char,int>v;
        int n=s.length();
        if(n==0)
            return 0;
        while(j<n)
            
        {
            v[s[j]]++;
            pair<int,int>ct=cnt(v);
            int p1=ct.first;
            int p2=ct.second;
            
            if(p1==p2)
            {
                maxi=max(maxi,j-i+1);
                j++;
            }
            else if(p1<p2)
            {
                while(p1<p2)
                {
                    v[s[i]]--;
                    i++;
                    ct=cnt(v);
                    p1=ct.first;
                    p2=ct.second;
                }
                ct=cnt(v);
                p1=ct.first;
                p2=ct.second;
                if(p1==p2)maxi=max(maxi,j-i+1);
                j++;
            }
        }
        return maxi==0?-1:maxi;
    }
};
